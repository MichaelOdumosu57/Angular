building angular apps with internalization


T9N

translate one language to another

L10N

translating internationalized (point out specific locales, dialiect)

I18N

designing app to be made for different locales

all of this is G11N (globalization)


Fist Names last name

    use a function with language locale


118n impt for
    critical error function
    

translating angular app

moment JS(dates & times) gr8 for translation
ngx-translate
GlobalizeJS
i18next (can use with vue backbone)

get this
4 phases of angular i18n

mark staic text for translation
just include i18n attribute

<h1 i18n>
    Dolphins & Whales are Awesome!
</h1>

focus on pluralization



extract

Angular uses a library places them in a .xlf file in a locale folder, for translation


4 rebuild your app



Keyboards are important because there are different in
keep them alphanumeric avoids many problems


Sorting Filtering
use String.prototype.localeCompare()


Design Layout and UX

    allow for expansion
    for english words, allow for 300% expansion

    Font Size and Emphasis
        use wider fonts size, (don not use italics and bold, they dont render everywhere)


    rtl ltr tell her about document.ltr rtl

    
    keep graphics out of text, symbols mean different in different languages
    also colors have different meaning

    dont use flags to represent lanuages or locales, different lanuges in different places

    BEWARE of MAPS, it means a lot to governments
    


tell her about document.dir
and those 4 steps


scale  simple sttraighted, everything has a single responsilbe
give everything  the  space its needs

google single responbisblity prinicple
use bootstrap





Building an Angular library



to create an emppty workspace
ng new magic-strings --create-application-false


to create library
    give a unique prefix so you dont see it everywhere
ng g library magic-strings --prefix=nk


ng-package impt


to generate an application (the common one we know)
ng g application magic-strings-example

ng serve magic-strings-example

ng build magic-string




every time you change your library you must rebuild it
ng build magic string (you can put it in package.json)


Build something useful


in

libraries/magic-strings/projects/magic-string/src/lib/magic-string.component.ts


publish libaray
build library use npm
go into dist [library name] run npm pack

go another angular app take dist in zipped library through it in there
npm install [whoile library zipped]
check package.json its a node module now
place it in app.module then in a component as a tag in an html

use package.json scripts to help build many aux files (README.md) for your library



to publish
give a unique name

npm login >>
npm publish

after 72 hours you cannot take off your app


use workspaces, and libraries not apps you reuse

use ng build to develop your library
go into dist and run npm pack

use npm install into another app
or npm publish


nir.life for any help

webstore IDE for file watching

he will publish this code on github
