template
90° 90°

90° Learning Angular 90°

to set up a reverse proxy look at the location /a in that default.conf file its real easy all you need really is the proxy pass
also you need https://medium.com/@icanhazstring/how-to-properly-get-angular-and-nginx-working-together-for-development-3e5d158734bf
so it can rebuild properly

for a free angular host
https://stackblitz.com/

go to pnpm.org  and use it to download massive packages your Hdd cannot handle


90° Getting Started 90°

run
ng new my-app
accept defaults with accept and return key

cd my-app
ng serve
--open opens the app in your defualt browser
its running

180° editing components 180°
in src/app/app.component.ts
change title to My First Angular App

the css is like regular HTML programming added it to apply  a style


90° Tour of Heroes 90°

270°Angular is made of Components there are modular versios of React but simpler
    the class file is the .ts
    the template file is the .html

270°  replace this with anything you want
      <h1>{{title}}</h1>
      it related to the class file
      so the template puts on the class file like clothes

270°
    src/ is like a global that all components must use
    especially in src styles

270°
    to make a new component
    ng generate component [name of component]
    
360°
    @Component is a decorator function
        selector - the component's CSS element selector
        templateUrl— the location of the component's template file.
        styleUrls— the location of the component's private CSS styles.
        ngOnInit  is a lifecycle hook
        always export the component class
        
270°
    to add a a value for non app
    {{[value]}} with no
    this put between HTML tags is known as interpolation binding
    
270°
    to display a component add it to template for the AppComponet
    insert it
    <h1>{{title}}</h1>
    <app-heroes></app-heroes>

270°
    now we create a hero class
    youre basically importing a class in the example

270°
    now to properly show it
    <h2>{{hero.name | uppercase}} Details</h2>
    <div><span>id: </span>{{hero.id}}</div>
    <div><span>name: </span>{{hero.name}}</div>
    
    which lives in <app-heroes></app-heroes> amazing
    
270°
    users can edit it
    <input [(ngModel)]="hero.name" placeholder="name"/>
    where ngModel binds that
    
180°
    AppModule
    not everything is availbe by default
    this is in app.module.ts and they come as @NgModule decorators
    so you import it in app.module.ts
    import { FormsModule } from '@angular/forms';
    and you add it to the @NgModule decorrator, imports array
    
270°
    every component must be declared in exactly on NgModule declaration
    file:/app/app.module.ts
    
180°
<!--4-->
    A list of Heroes
    this is where typescript is noticeable
    
    files
    /src/app/mock-heroes.ts
    /src/app/heroes/heroes.component.ts
    
    to list use *ngFor
    /src/app/heroes.component.html
    
    never forget the asterick

270°
    event binding
<!--5-->
    files: /heroes.component.ts
        :heroes.component.html
    <li *ngFor="let hero of heroes" (click)="onSelect(hero)">
    

270°
<!--6-->
    however selectedHero does not exist
    use *ngIf to save the app
    files:heroes.component.html
    

270°
    <!--7-->
    stlying specific components in its list
    this is done with class binding
    [class.[className]]="hero === selectedHero"
    files:heroes.component.html
        